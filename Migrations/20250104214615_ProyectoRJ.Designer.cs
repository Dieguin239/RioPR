// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ProyectoRJ.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250104214615_ProyectoRJ")]
    partial class ProyectoRJ
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoRJ.Models.Auditoria", b =>
                {
                    b.Property<int>("IdAuditoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAuditoria"));

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAccion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdAuditoria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("ProyectoRJ.Models.DetalleSolicitud", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("DetallesSolicitudes");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpresa"));

                    b.Property<string>("NombreEmpresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ProyectoRJ.Models.InformeMecanico", b =>
                {
                    b.Property<int>("IdInforme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInforme"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoMantenimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInforme");

                    b.HasIndex("IdUsuario");

                    b.ToTable("InformesMecanicos");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Inventario", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArticulo"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UbicacionUso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArticulo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Mantenimiento", b =>
                {
                    b.Property<int>("IdMantenimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMantenimiento"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMantenimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("ProyectoRJ.Models.RelacionIngenierosEmpresas", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRelacion"));

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RelacionesIngenierosEmpresas");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Reporte", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReporte");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ProyectoRJ.Models.SalidaInventario", b =>
                {
                    b.Property<int>("IdSalida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalida"));

                    b.Property<int>("CantidadSalida")
                        .HasColumnType("int");

                    b.Property<int>("CantidadUsada")
                        .HasColumnType("int");

                    b.Property<string>("EstadoUso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSalida");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("SalidasInventario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Sector", b =>
                {
                    b.Property<int>("IdSector")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSector"));

                    b.Property<string>("NombreSector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSector");

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Solicitud", b =>
                {
                    b.Property<int>("IdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSolicitud"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdSolicitud");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdSector")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdSector");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Auditoria", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("Auditorias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.DetalleSolicitud", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Inventario", "Articulo")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoRJ.Models.Solicitud", "Solicitud")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ProyectoRJ.Models.InformeMecanico", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("InformesMecanicos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Inventario", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Mantenimiento", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("Mantenimientos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.RelacionIngenierosEmpresas", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Empresa", "Empresa")
                        .WithMany("RelacionesIngenierosEmpresas")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("RelacionesIngenierosEmpresas")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Reporte", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("Reportes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.SalidaInventario", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Inventario", "Articulo")
                        .WithMany("SalidasInventario")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("SalidasInventario")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Solicitud", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Empresa", "Empresa")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdEmpresa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoRJ.Models.Usuario", "Usuario")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoRJ.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ProyectoRJ.Models.Sector", "Sector")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdSector")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Empresa", b =>
                {
                    b.Navigation("RelacionesIngenierosEmpresas");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Inventario", b =>
                {
                    b.Navigation("DetallesSolicitudes");

                    b.Navigation("SalidasInventario");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Sector", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Solicitud", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ProyectoRJ.Models.Usuario", b =>
                {
                    b.Navigation("Auditorias");

                    b.Navigation("InformesMecanicos");

                    b.Navigation("Inventarios");

                    b.Navigation("Mantenimientos");

                    b.Navigation("RelacionesIngenierosEmpresas");

                    b.Navigation("Reportes");

                    b.Navigation("SalidasInventario");

                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
